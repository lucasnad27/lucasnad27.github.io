{"version":3,"sources":["webpack:///./src/templates/page.js"],"names":["NoteTemplate","data","pageContext","markdownRemark","frontmatter","title","date","path","author","coverImage","excerpt","tags","autoExcerpt","id","html","next","previous","description","key","previousNote","nextNote","pageQuery"],"mappings":"2FAAA,8GAoCeA,UA5BM,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAAkB,EAM1CD,EAAKE,eANqC,IAE5CC,YAAeC,EAF6B,EAE7BA,MAAOC,EAFsB,EAEtBA,KAAMC,EAFgB,EAEhBA,KAAMC,EAFU,EAEVA,OAAQC,EAFE,EAEFA,WAAYC,EAFV,EAEUA,QAASC,EAFnB,EAEmBA,KACtDC,EAHmC,EAG5CF,QACAG,EAJ4C,EAI5CA,GACAC,EAL4C,EAK5CA,KAEMC,EAAmBb,EAAnBa,KAAMC,EAAad,EAAbc,SAEd,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKX,MAAOA,EAAOY,YAAaP,GAAWE,IAC3C,kBAAC,IAAD,CACEM,IAAKL,EACLR,MAAOA,EACPC,KAAMA,EACNC,KAAMA,EACNC,OAAQA,EACRC,WAAYA,EACZK,KAAMA,EACNH,KAAMA,EACNQ,aAAcH,EACdI,SAAUL,MAgBX,IAAMM,EAAS","file":"component---src-templates-page-js-6ea051b851f224c7792a.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\n\nimport SEO from '../components/seo'\nimport Layout from '../components/layout'\nimport Note from '../components/note'\n\nconst NoteTemplate = ({ data, pageContext }) => {\n  const {\n    frontmatter: { title, date, path, author, coverImage, excerpt, tags },\n    excerpt: autoExcerpt,\n    id,\n    html,\n  } = data.markdownRemark\n  const { next, previous } = pageContext\n\n  return (\n    <Layout>\n      <SEO title={title} description={excerpt || autoExcerpt} />\n      <Note\n        key={id}\n        title={title}\n        date={date}\n        path={path}\n        author={author}\n        coverImage={coverImage}\n        html={html}\n        tags={tags}\n        previousNote={previous}\n        nextNote={next}\n      />\n    </Layout>\n  )\n}\n\nexport default NoteTemplate\n\nNoteTemplate.propTypes = {\n  data: PropTypes.object.isRequired,\n  pageContext: PropTypes.shape({\n    next: PropTypes.object,\n    previous: PropTypes.object,\n  }),\n}\n\nexport const pageQuery = graphql`\n  query($path: String) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      frontmatter {\n        title\n        date(formatString: \"DD MMMM YYYY\")\n        path\n        author\n        excerpt\n        tags\n        coverImage {\n          childImageSharp {\n            fluid(maxWidth: 800) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n      id\n      html\n      excerpt\n    }\n  }\n`\n"],"sourceRoot":""}